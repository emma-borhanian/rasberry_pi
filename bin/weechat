#!/bin/bash
set -e

BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$BASEDIR/.."

source "lib/bash_include"

if [[ -f .env ]]; then
  source .env
fi

if [[ ! "$1" ]]; then
  echo "usage: weechat <container name>" >&2
  exit 1
fi

NOTIFICATION_BUNDLE_IDENTIFIER=${NOTIFICATION_BUNDLE_IDENTIFIER:-com.googlecode.iterm2}

container_name=$1
directory="/container_files/$container_name"
socket="$directory/tmp/weechat.notify.sock"

function sshloop {
  while true; do
    ssh "$@"
    sleep 1
  done
}

function darwinNotify {
  while read -r notification; do
    notification_parts=($notification)
    subtitle=$(base64 --decode <<< "${notification_parts[0]}")
    message=$(base64 --decode <<< "${notification_parts[1]}")
    terminal-notifier \
      -title Weechat \
      -subtitle "$subtitle" \
      -message "$message" \
      -activate "$NOTIFICATION_BUNDLE_IDENTIFIER" \
      -sender "$NOTIFICATION_BUNDLE_IDENTIFIER"
  # docker seems to create the socket as a directory
  done < <(sshloop "$USER_ROOT@$HOST" "while true; do rm -r $(printf %q "$socket") &> /dev/null; socket -s $(printf %q "$socket"); done")
}

# kill background process on exit
trap 'kill $(jobs -p)' EXIT

if [[ "$(uname)" = "Darwin" ]]; then
  darwinNotify &
fi

sshloop -t "$USER_ROOT@$HOST" "screen -q -U -x -R -S weechat bash -c 'docker attach $1'"
